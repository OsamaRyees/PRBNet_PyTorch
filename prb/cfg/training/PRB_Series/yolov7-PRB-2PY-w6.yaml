# parameters
nc: 80  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors:
  - [ 19,27,  44,40,  38,94 ]  # P3/8
  - [ 96,68,  86,152,  180,137 ]  # P4/16
  - [ 140,301,  303,264,  238,542 ]  # P5/32
  - [ 436,615,  739,380,  925,792 ]  # P6/64

# yolov7 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, ReOrg, []],  # 0
   [-1, 1, Conv, [64, 3, 1]],  # 1-P1/2
   
   [-1, 1, Conv, [128, 3, 2]],  # 2-P2/4
   [-1, 1, Conv, [64, 1, 1]],
   [-2, 1, Conv, [64, 1, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [128, 1, 1]],  # 10
         
   [-1, 1, Conv, [256, 3, 2]],  # 11-P3/8
   [-1, 1, Conv, [128, 1, 1]],
   [-2, 1, Conv, [128, 1, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [256, 1, 1]],  # 19
         
   [-1, 1, Conv, [512, 3, 2]],  # 20-P4/16
   [-1, 1, Conv, [256, 1, 1]],
   [-2, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [512, 1, 1]],  # 28
         
   [-1, 1, Conv, [768, 3, 2]],  # 29-P5/32
   [-1, 1, Conv, [384, 1, 1]],
   [-2, 1, Conv, [384, 1, 1]],
   [-1, 1, Conv, [384, 3, 1]],
   [-1, 1, Conv, [384, 3, 1]],
   [-1, 1, Conv, [384, 3, 1]],
   [-1, 1, Conv, [384, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [768, 1, 1]],  # 37
         
   [-1, 1, Conv, [1024, 3, 2]],  # 38-P6/64
   [-1, 1, Conv, [512, 1, 1]],
   [-2, 1, Conv, [512, 1, 1]],
   [-1, 1, Conv, [512, 3, 1]],
   [-1, 1, Conv, [512, 3, 1]],
   [-1, 1, Conv, [512, 3, 1]],
   [-1, 1, Conv, [512, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [1024, 1, 1]],  # 46
  ]

# 1 (P1 backbone)   /2
# 10 (P2 backbone)  /4
# 19 (P3 backbone)  /8
# 28 (P4 backbone)  /16
# 37 (P5 backbone)  /32
# 46 (P6 backbone) /64

# yolov7 head
head:
  [
   # bifusion module 1
   [46, 1, SPPCSPC, [640]],  # 47
   #    RB block1, route backbone P5+P4+P6
   #    output/current/shallow/deep layer depth 480/384/192/384
   #    upsample scale factor 2, mode nearest
   [-1, 1, Conv, [384, 1, 1]], #48
   [[37, 28, -1], 1, RBBlockA, [480, '384,1,1;192,1,2', 2, 'nearest']],  # 49
   [-1, 1, Bottleneck, [384, False]],
   [-1, 2, BottleneckCSPB, [192]],  # 51
   
   #    RB block2, route backbone P4+P3+RB Block1
   #    output/current/shallow/deep layer depth 320/256/128/256
   #    upsample scale factor 2, mode nearest
   [-1, 1, Conv, [256, 1, 1]], # 52
   [[28, 19, -1], 1, RBBlockA, [320, '256,1,1;128,1,2', 2, 'nearest']],  # 53
   [-1, 1, Bottleneck, [256, False]],
   [-1, 2, BottleneckCSPB, [128]],  # 55

   #    RB block3, route backbone P3+P2+RB Block2
   #    output/current/shallow/deep layer depth 160/128/64/128
   #    upsample scale factor 2, mode nearest
   [-1, 1, Conv, [128, 1, 1]], # 56
   [[19, 10, -1], 1, RBBlockA, [160, '128,1,1;64,1,2', 2, 'nearest']],  # 57
   [-1, 1, Bottleneck, [128, False]],
   [-1, 2, BottleneckCSPB, [64]],  # 59
   
   #    BFM1
   [[-1,56], 1, BFM, [320, '160,1,1;160,1,1']], 
   [-1, 1, Bottleneck, [256, False]],
   [-1, 2, BottleneckCSPB, [128]],  # 62

   #    BFM2
   [[-1,52], 1, BFM, [480, '240,1,1;240,1,1']], 
   [-1, 1, Bottleneck, [384, False]],
   [-1, 2, BottleneckCSPB, [192]],  # 65

   #    BFM3
   [[-1,48], 1, BFM, [640, '320,1,1;320,1,1']], 
   [-1, 1, Bottleneck, [512, False]],
   [-1, 2, BottleneckCSPB, [256]],  # 68
   # end of bifusion module 1
   
   
   # bifusion module 2
   [37, 1, SPPCSPC, [480]],  # 69
   #    RBblock1, route backbone P4+P3+P5
   #    output/current/shallow/deep layer depth 480/384/192/384
   #    upsample scale factor 2, mode nearest
   [-1, 1, Conv, [384, 1, 2]], #70
   [[28, 19, -1], 1, RBBlockA, [480, '384,1,2;192,1,4', 2, 'nearest']],  # 71
   [-1, 1, Bottleneck, [384, False]], # 72
   [-1, 2, BottleneckCSPB, [192]],  # 73
   
   #    RB block2, route backbone P3+P2+RB Block1
   #    output/current/shallow/deep layer depth 320/256/128/256
   #    upsample scale factor 2, mode nearest
   [-1, 1, Conv, [256, 1, 1]], # 74
   [[19, 10, -1], 1, RBBlockA, [320, '256,1,2;128,1,4', 2, 'nearest']],  # 75
   [-1, 1, Bottleneck, [256, False]],
   [-1, 2, BottleneckCSPB, [128]],  # 77

   #    RB block3, route backbone P2+P1+RB Block2 
   #    output/current/shallow/deep layer depth 160/128/64/128
   #    upsample scale factor 2, mode nearest
   [-1, 1, Conv, [128, 1, 1]], #78
   [[10, 1, -1], 1, RBBlockA, [160, '128,1,2;64,1,4', 2, 'nearest']],  # 79
   [-1, 1, Bottleneck, [128, False]],
   [-1, 2, BottleneckCSPB, [64]],  # 81

   #    BFM1
   [[-1,78], 1, BFM, [320, '160,1,1;160,1,1']], 
   [-1, 1, Bottleneck, [256, False]],
   [-1, 2, BottleneckCSPB, [128]],  # 84

   #    BFM2
   [[-1,74], 1, BFM, [480, '240,1,1;240,1,1']], 
   [-1, 1, Bottleneck, [384, False]],
   [-1, 2, BottleneckCSPB, [192]],  # 87

   #    BFM3
   [[-1,70], 1, BFM, [640, '320,1,1;320,1,1']], 
   [-1, 1, Bottleneck, [512, False]],
   [-1, 2, BottleneckCSPB, [256]],  # 90
   # end of bifusion module 2

   [[81, 59], 1, Concat, [1]], # 91 multi-pyramid fusion PY3/8
   [-1, 1, BottleneckCSPB, [192]], # 92 bottleneck = PY - 1
   [[84, 62], 1, Concat, [1]],  # 93 multi-pyramid fusion PY4/16
   [-1, 1, BottleneckCSPB, [256]], # 94 bottleneck = PY - 1
   [[87, 65], 1, Concat, [1]], # 95 multi-pyramid fusion PY5/32
   [-1, 1, BottleneckCSPB, [384]], # 96  bottleneck = PY - 1
   [[90, 68], 1, Concat, [1]], # 97 multi-pyramid PY6/64
   [-1, 1, BottleneckCSPB, [512]], # 98 bottleneck = PY - 1
   
   
   #Lead Head
   [92, 1, Conv, [320, 1, 1]],
   [94, 1, Conv, [640, 1, 1]],
   [96, 1, Conv, [960, 1, 1]],   
   [98, 1, Conv, [1280, 1, 1]],

   #Iux Head
   [58, 1, Conv, [320, 1, 1]],
   [55, 1, Conv, [640, 1, 1]],
   [51, 1, Conv, [960, 1, 1]],   
   [48, 1, Conv, [1280, 1, 1]],

   [[99,100,101,102,103,104,105,106], 1, IAuxDetect, [nc, anchors]],   # Detect(P3, P4, P5, P6)
  ]
