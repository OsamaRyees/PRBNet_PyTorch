# parameters
nc: 80  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors:
  - [12,16, 19,36, 40,28]  # P3/8
  - [36,75, 76,55, 72,146]  # P4/16
  - [142,110, 192,243, 459,401]  # P5/32

# CSP-Darknet backbone
backbone:
  # [from, number, module, args]
  # assume input shape = 3 x 640 x 640
  [[-1, 1, Conv, [32, 3, 1]],  # 0          # 32   x 640 x 640                    
   [-1, 1, Conv, [64, 3, 2]],  # 1-P1/2     # 64   x 320 x 320
   [-1, 1, Bottleneck, [64]],               # 64   x 320 x 320
   [-1, 1, Conv, [128, 3, 2]],  # 3-P2/4    # 128  x 160 x 160
   [-1, 2, BottleneckCSPC, [128]],          # 128  x 160 x 160
   [-1, 1, Conv, [256, 3, 2]],  # 5-P3/8    # 256  x 80  x 80
   [-1, 8, BottleneckCSPC, [256]],          # 256  x 80  x 80
   [-1, 1, Conv, [512, 3, 2]],  # 7-P4/16   # 512  x 40  x 40
   [-1, 8, BottleneckCSPC, [512]],          # 512  x 40  x 40
   [-1, 1, Conv, [1024, 3, 2]], # 9-P5/32   # 1024 x 20  x 20
   [-1, 4, BottleneckCSPC, [1024]],  # 10   # 1024 x 20  x 20
  ]

# 2 (P1 backbone)
# 4 (P2 backbone)
# 6 (P3 backbone)
# 8 (P4 backbone)
# 10 (P5 backbone)

# CSP-Dark-BFM head feat PRB neck
head:
  [                            
   # bifusion module 1
   [10, 1, SPPCSPC, [512]],  # 11
   #    RB block1, route backbone P4+P3+P5
   #    output/current/shallow/deep layer depth 512/256/128/256
   #    upsample scale factor 2, mode nearest
   [-1, 1, Conv, [256, 1, 1]], #12
   [[8, 6, -1], 1, RBBlockA, [512, '256,1,1;128,1,2', 2, 'nearest']],  # 13
   [-1, 1, Bottleneck, [512, False]],
   [-1, 2, BottleneckCSPB, [256]],  # 15
   
   #    RB block2, route backbone P3+P2+RB Block1
   #    output/current/shallow/deep layer depth 256/128/64/128
   #    upsample scale factor 2, mode nearest
   [-1, 1, Conv, [128, 1, 1]], # 16
   [[6, 4, -1], 1, RBBlockA, [256, '128,1,1;64,1,2', 2, 'nearest']],  # 17
   [-1, 1, Bottleneck, [256, False]],
   [-1, 2, BottleneckCSPB, [128]],  # 19
   
   #    BFM1
   [[-1,16], 1, BFMBlockB, [256, '128,1,2;128,1,1']], 
   [-1, 1, Bottleneck, [256, False]],
   [-1, 2, BottleneckCSPB, [256]],  # 22

   #    BFM2
   [[-1,12], 1, BFMBlockB, [512, '256,1,2;256,1,1']], 
   [-1, 1, Bottleneck, [512, False]],
   [-1, 2, BottleneckCSPB, [512]],  # 25
   # end of bifusion module 1
   
   
   # bifusion module 2
   [8, 1, SPPCSPC, [256]],  # 26
   #    RBblock1, route backbone P3+P2+P4
   #    output/current/shallow/deep layer depth 512/128/64/128
   #    upsample scale factor 2, mode nearest
   [-1, 1, Conv, [128, 1, 2]], #27
   [[6, 4, -1], 1, RBBlockA, [512, '128,1,2;64,1,4', 2, 'nearest']],  # 28
   [-1, 1, Bottleneck, [512, False]], #29
   [-1, 2, BottleneckCSPB, [256]],  # 30
   
   #    RB block2, route backbone P2+P1+RB Block1
   #    output/current/shallow/deep layer depth 256/64/32/128
   #    upsample scale factor 2, mode nearest
   [-1, 1, Conv, [128, 1, 1]], #31
   [[4, 2, -1], 1, RBBlockA, [256, '64,1,2;32,1,4', 2, 'nearest']],  # 32
   [-1, 1, Bottleneck, [256, False]],
   [-1, 2, BottleneckCSPB, [128]],  # 34

   #    BFM1
   [[-1,31], 1, BFMBlockB, [256, '128,1,2;128,1,1']], 
   [-1, 1, Bottleneck, [256, False]],
   [-1, 2, BottleneckCSPB, [256]],  # 37

   #    BFM2
   [[-1,27], 1, BFMBlockB, [512, '256,1,2;256,1,1']], 
   [-1, 1, Bottleneck, [512, False]],
   [-1, 2, BottleneckCSPB, [512]],  # 40
   # end of bifusion module 2   

   [[34, 19], 1, Concat, [1]], # 41 multi-pyramid fusion PY3/8
   [-1, 3, BottleneckCSPB, [128]], # 42 bottleneck = PY + 1
   [-1, 1, Conv, [256, 3, 1]],
   [[37, 22], 1, Concat, [1]],  # 44 multi-pyramid fusion PY4/16
   [-1, 3, BottleneckCSPB, [256]], # 45 bottleneck = PY + 1
   [-1, 1, Conv, [512, 3, 1]],
   [[40, 25], 1, Concat, [1]],  # 47 multi-pyramid fusion PY5/32
   [-1, 3, BottleneckCSPB, [512]], # 48 bottleneck = PY + 1
   [-1, 1, Conv, [1024, 3, 1]],

   [[43,46,49], 1, Detect, [nc, anchors]],   # Detect(P3, P4, P5)       # 255  x 3   x 80/40/20 x 80/40/20 x 85
  ]
